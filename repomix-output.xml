
<directory_structure>
src/
  components/
    Layout/
      Navbar.tsx
    PropertyCard/
      PropertyCard.tsx
    SearchFilters/
      SearchFilters.tsx
  data/
    mockData.ts
  pages/
    DashboardPage.tsx
    FavoritesPage.tsx
    HomePage.tsx
    ListingsPage.tsx
    PropertyDetailPage.tsx
  types/
    index.ts
  App.tsx
  index.css
  main.tsx
  vite-env.d.ts
.gitignore
eslint.config.js
index.html
package.json
postcss.config.js
tailwind.config.js
tsconfig.app.json
tsconfig.json
tsconfig.node.json
vite.config.ts
</directory_structure>

<files>
This section contains the contents of the repository's files.

<file path="src/components/Layout/Navbar.tsx">
import React from 'react';
import { Link, useLocation } from 'react-router-dom';
import { Home, Search, Heart, User, Wallet } from 'lucide-react';

interface NavbarProps {
  onConnectWallet: () => void;
  walletConnected: boolean;
}

export const Navbar: React.FC<NavbarProps> = ({ onConnectWallet, walletConnected }) => {
  const location = useLocation();

  const isActive = (path: string) => location.pathname === path;

  return (
    <nav className="bg-white/90 backdrop-blur-md border-b border-gray-200 sticky top-0 z-50 transition-all duration-300">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between h-16">
          <div className="flex items-center">
            <Link to="/" className="flex items-center space-x-2 group">
              <div className="w-8 h-8 bg-gradient-to-br from-blue-600 to-emerald-500 rounded-lg flex items-center justify-center group-hover:scale-105 transition-transform duration-200">
                <Home className="w-5 h-5 text-white" />
              </div>
              <span className="text-xl font-bold bg-gradient-to-r from-blue-600 to-emerald-500 bg-clip-text text-transparent">
                PropChain
              </span>
            </Link>
          </div>
          
          <div className="hidden md:flex items-center space-x-8">
            <Link
              to="/"
              className={`px-3 py-2 text-sm font-medium transition-colors duration-200 ${
                isActive('/') 
                  ? 'text-blue-600 border-b-2 border-blue-600' 
                  : 'text-gray-600 hover:text-blue-600'
              }`}
            >
              Home
            </Link>
            <Link
              to="/listings"
              className={`px-3 py-2 text-sm font-medium transition-colors duration-200 ${
                isActive('/listings') 
                  ? 'text-blue-600 border-b-2 border-blue-600' 
                  : 'text-gray-600 hover:text-blue-600'
              }`}
            >
              Listings
            </Link>
            <Link
              to="/favorites"
              className={`px-3 py-2 text-sm font-medium transition-colors duration-200 ${
                isActive('/favorites') 
                  ? 'text-blue-600 border-b-2 border-blue-600' 
                  : 'text-gray-600 hover:text-blue-600'
              }`}
            >
              Favorites
            </Link>
            <Link
              to="/dashboard"
              className={`px-3 py-2 text-sm font-medium transition-colors duration-200 ${
                isActive('/dashboard') 
                  ? 'text-blue-600 border-b-2 border-blue-600' 
                  : 'text-gray-600 hover:text-blue-600'
              }`}
            >
              Dashboard
            </Link>
          </div>

          <div className="flex items-center space-x-4">
            <button
              onClick={onConnectWallet}
              className={`flex items-center space-x-2 px-4 py-2 rounded-lg font-medium transition-all duration-300 ${
                walletConnected
                  ? 'bg-emerald-100 text-emerald-700 hover:bg-emerald-200'
                  : 'bg-gradient-to-r from-blue-600 to-emerald-500 text-white hover:from-blue-700 hover:to-emerald-600 shadow-lg hover:shadow-xl transform hover:scale-105'
              }`}
            >
              <Wallet className="w-4 h-4" />
              <span className="hidden sm:block">
                {walletConnected ? 'Wallet Connected' : 'Connect Wallet'}
              </span>
            </button>
          </div>
        </div>
      </div>
    </nav>
  );
};
</file>

<file path="src/components/PropertyCard/PropertyCard.tsx">
import React from 'react';
import { Heart, MapPin, Bed, Bath, Square, Car } from 'lucide-react';
import { Property } from '../../types';

interface PropertyCardProps {
  property: Property;
  onToggleFavorite: (id: string) => void;
  onClick: (id: string) => void;
}

export const PropertyCard: React.FC<PropertyCardProps> = ({ 
  property, 
  onToggleFavorite, 
  onClick 
}) => {
  const formatPrice = (price: number) => {
    if (property.status === 'for-rent' || property.status === 'rented') {
      return `$${price.toLocaleString()}/mo`;
    }
    return `$${price.toLocaleString()}`;
  };

  return (
    <div 
      className="bg-white/95 backdrop-blur-sm rounded-xl shadow-lg hover:shadow-2xl transition-all duration-300 overflow-hidden group cursor-pointer transform hover:scale-[1.02] border border-white/20"
      onClick={() => onClick(property.id)}
    >
      <div className="relative">
        <img 
          src={property.images[0]} 
          alt={property.title}
          className="w-full h-48 object-cover group-hover:scale-105 transition-transform duration-500"
        />
        <div className="absolute top-3 left-3">
          <span className={`px-3 py-1 rounded-full text-xs font-medium ${
            property.status === 'for-sale' 
              ? 'bg-emerald-500 text-white' 
              : property.status === 'for-rent'
              ? 'bg-blue-500 text-white'
              : property.status === 'sold'
              ? 'bg-gray-500 text-white'
              : 'bg-orange-500 text-white'
          }`}>
            {property.status === 'for-sale' ? 'For Sale' : 
             property.status === 'for-rent' ? 'For Rent' :
             property.status === 'sold' ? 'Sold' : 'Rented'}
          </span>
        </div>
        <div className="absolute top-3 right-3 flex space-x-2">
          {property.isNFT && (
            <span className="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-2 py-1 rounded-full text-xs font-medium">
              NFT
            </span>
          )}
          <button
            onClick={(e) => {
              e.stopPropagation();
              onToggleFavorite(property.id);
            }}
            className={`p-2 rounded-full transition-all duration-200 ${
              property.favorited 
                ? 'bg-red-500 text-white hover:bg-red-600' 
                : 'bg-white/80 text-gray-600 hover:bg-white hover:text-red-500'
            }`}
          >
            <Heart className={`w-4 h-4 ${property.favorited ? 'fill-current' : ''}`} />
          </button>
        </div>
      </div>
      
      <div className="p-6">
        <div className="flex justify-between items-start mb-3">
          <h3 className="text-lg font-semibold text-gray-900 line-clamp-2 group-hover:text-blue-600 transition-colors">
            {property.title}
          </h3>
          <span className="text-xl font-bold text-blue-600">{formatPrice(property.price)}</span>
        </div>
        
        <div className="flex items-center text-gray-500 mb-4">
          <MapPin className="w-4 h-4 mr-1" />
          <span className="text-sm">{property.location}</span>
        </div>
        
        <div className="flex items-center justify-between text-gray-600 text-sm">
          <div className="flex items-center space-x-4">
            <div className="flex items-center">
              <Bed className="w-4 h-4 mr-1" />
              <span>{property.bedrooms}</span>
            </div>
            <div className="flex items-center">
              <Bath className="w-4 h-4 mr-1" />
              <span>{property.bathrooms}</span>
            </div>
            <div className="flex items-center">
              <Square className="w-4 h-4 mr-1" />
              <span>{property.sqft.toLocaleString()}</span>
            </div>
            {property.parking > 0 && (
              <div className="flex items-center">
                <Car className="w-4 h-4 mr-1" />
                <span>{property.parking}</span>
              </div>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};
</file>

<file path="src/components/SearchFilters/SearchFilters.tsx">
import React from 'react';
import { Search, Filter, X } from 'lucide-react';
import { PropertyFilters } from '../../types';

interface SearchFiltersProps {
  filters: PropertyFilters;
  onFiltersChange: (filters: PropertyFilters) => void;
  showFilters: boolean;
  onToggleFilters: () => void;
}

export const SearchFilters: React.FC<SearchFiltersProps> = ({
  filters,
  onFiltersChange,
  showFilters,
  onToggleFilters
}) => {
  const handleFilterChange = (key: keyof PropertyFilters, value: any) => {
    onFiltersChange({
      ...filters,
      [key]: value === '' ? undefined : value
    });
  };

  const clearFilters = () => {
    onFiltersChange({});
  };

  const hasActiveFilters = Object.values(filters).some(value => value !== undefined && value !== '');

  return (
    <div className="bg-white/90 backdrop-blur-sm rounded-xl shadow-xl border border-white/30">
      <div className="p-6">
        {/* Search Bar */}
        <div className="relative mb-4">
          <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-5 h-5" />
          <input
            type="text"
            placeholder="Search by location, property type, or features..."
            value={filters.location || ''}
            onChange={(e) => handleFilterChange('location', e.target.value)}
            className="w-full pl-10 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors"
          />
        </div>

        {/* Filter Toggle */}
        <div className="flex justify-between items-center">
          <button
            onClick={onToggleFilters}
            className="flex items-center space-x-2 px-4 py-2 text-gray-600 hover:text-blue-600 transition-colors"
          >
            <Filter className="w-4 h-4" />
            <span>Filters</span>
            {hasActiveFilters && (
              <span className="bg-blue-500 text-white text-xs px-2 py-1 rounded-full">
                Active
              </span>
            )}
          </button>
          
          {hasActiveFilters && (
            <button
              onClick={clearFilters}
              className="flex items-center space-x-1 text-gray-500 hover:text-red-500 transition-colors"
            >
              <X className="w-4 h-4" />
              <span className="text-sm">Clear</span>
            </button>
          )}
        </div>
      </div>

      {/* Expanded Filters */}
      {showFilters && (
        <div className="border-t border-gray-100/50 p-6 bg-gray-50/80 backdrop-blur-sm rounded-b-xl">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
            {/* Price Range */}
            <div className="space-y-2">
              <label className="block text-sm font-medium text-gray-700">Min Price</label>
              <input
                type="number"
                placeholder="$0"
                value={filters.minPrice || ''}
                onChange={(e) => handleFilterChange('minPrice', e.target.value ? parseInt(e.target.value) : undefined)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              />
            </div>
            
            <div className="space-y-2">
              <label className="block text-sm font-medium text-gray-700">Max Price</label>
              <input
                type="number"
                placeholder="Any"
                value={filters.maxPrice || ''}
                onChange={(e) => handleFilterChange('maxPrice', e.target.value ? parseInt(e.target.value) : undefined)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              />
            </div>

            {/* Property Type */}
            <div className="space-y-2">
              <label className="block text-sm font-medium text-gray-700">Type</label>
              <select
                value={filters.type || ''}
                onChange={(e) => handleFilterChange('type', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="">All Types</option>
                <option value="house">House</option>
                <option value="apartment">Apartment</option>
                <option value="condo">Condo</option>
                <option value="townhouse">Townhouse</option>
              </select>
            </div>

            {/* Status */}
            <div className="space-y-2">
              <label className="block text-sm font-medium text-gray-700">Status</label>
              <select
                value={filters.status || ''}
                onChange={(e) => handleFilterChange('status', e.target.value)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="">All Status</option>
                <option value="for-sale">For Sale</option>
                <option value="for-rent">For Rent</option>
                <option value="sold">Sold</option>
                <option value="rented">Rented</option>
              </select>
            </div>

            {/* Bedrooms */}
            <div className="space-y-2">
              <label className="block text-sm font-medium text-gray-700">Bedrooms</label>
              <select
                value={filters.bedrooms || ''}
                onChange={(e) => handleFilterChange('bedrooms', e.target.value ? parseInt(e.target.value) : undefined)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="">Any</option>
                <option value="1">1+</option>
                <option value="2">2+</option>
                <option value="3">3+</option>
                <option value="4">4+</option>
                <option value="5">5+</option>
              </select>
            </div>

            {/* Bathrooms */}
            <div className="space-y-2">
              <label className="block text-sm font-medium text-gray-700">Bathrooms</label>
              <select
                value={filters.bathrooms || ''}
                onChange={(e) => handleFilterChange('bathrooms', e.target.value ? parseInt(e.target.value) : undefined)}
                className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
              >
                <option value="">Any</option>
                <option value="1">1+</option>
                <option value="2">2+</option>
                <option value="3">3+</option>
                <option value="4">4+</option>
              </select>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};
</file>

<file path="src/data/mockData.ts">
import { Property, User } from '../types';

export const mockProperties: Property[] = [
  {
    id: '1',
    title: 'Modern Downtown Loft',
    price: 850000,
    location: 'Downtown Manhattan, NY',
    bedrooms: 2,
    bathrooms: 2,
    sqft: 1200,
    type: 'apartment',
    status: 'for-sale',
    images: [
      'https://images.pexels.com/photos/1396122/pexels-photo-1396122.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/2121121/pexels-photo-2121121.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/2724748/pexels-photo-2724748.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Stunning modern loft featuring floor-to-ceiling windows, exposed brick, and premium finishes throughout. Located in the heart of downtown with easy access to transportation.',
    features: ['Hardwood Floors', 'In-Unit Laundry', 'Gym Access', 'Rooftop Deck', 'Parking Included'],
    yearBuilt: 2020,
    parking: 1,
    isNFT: true,
    walletAddress: '0x742d35cc6634C0532925a3b8D6aD8a7e15b2a9d1'
  },
  {
    id: '2',
    title: 'Luxury Family Estate',
    price: 2400000,
    location: 'Beverly Hills, CA',
    bedrooms: 5,
    bathrooms: 4,
    sqft: 4500,
    type: 'house',
    status: 'for-sale',
    images: [
      'https://images.pexels.com/photos/1396132/pexels-photo-1396132.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/2635038/pexels-photo-2635038.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/271816/pexels-photo-271816.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Exceptional luxury estate with panoramic city views, gourmet kitchen, master suite with spa-like bathroom, and resort-style backyard.',
    features: ['Swimming Pool', 'Wine Cellar', 'Home Theater', 'Smart Home', 'Guest House'],
    yearBuilt: 2018,
    parking: 3,
    isNFT: false
  },
  {
    id: '3',
    title: 'Cozy Studio Apartment',
    price: 2200,
    location: 'Brooklyn Heights, NY',
    bedrooms: 1,
    bathrooms: 1,
    sqft: 650,
    type: 'apartment',
    status: 'for-rent',
    images: [
      'https://images.pexels.com/photos/2724749/pexels-photo-2724749.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/2724748/pexels-photo-2724748.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Charming studio in historic Brooklyn Heights with beautiful views of the Manhattan skyline. Perfect for young professionals.',
    features: ['City Views', 'Updated Kitchen', 'Laundry in Building', 'Pet Friendly'],
    yearBuilt: 1960,
    parking: 0,
    isNFT: false
  },
  {
    id: '4',
    title: 'Waterfront Penthouse',
    price: 3200000,
    location: 'Miami Beach, FL',
    bedrooms: 3,
    bathrooms: 3,
    sqft: 2800,
    type: 'condo',
    status: 'for-sale',
    images: [
      'https://images.pexels.com/photos/1643383/pexels-photo-1643383.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/1571460/pexels-photo-1571460.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/2102587/pexels-photo-2102587.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Exclusive penthouse with direct ocean access, private elevator, and world-class amenities. The epitome of luxury coastal living.',
    features: ['Ocean Views', 'Private Elevator', 'Concierge Service', 'Beach Access', 'Marina'],
    yearBuilt: 2021,
    parking: 2,
    isNFT: true,
    walletAddress: '0x742d35cc6634C0532925a3b8D6aD8a7e15b2a9d2'
  },
  {
    id: '5',
    title: 'Historic Brownstone',
    price: 1850000,
    location: 'Back Bay, Boston, MA',
    bedrooms: 4,
    bathrooms: 3,
    sqft: 3200,
    type: 'townhouse',
    status: 'for-sale',
    images: [
      'https://images.pexels.com/photos/323780/pexels-photo-323780.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/1115804/pexels-photo-1115804.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Beautifully restored Victorian brownstone with original architectural details, modern updates, and private garden.',
    features: ['Original Details', 'Private Garden', 'Fireplace', 'Updated Systems', 'Historic District'],
    yearBuilt: 1885,
    parking: 1,
    isNFT: false
  },
  {
    id: '6',
    title: 'Mountain View Retreat',
    price: 4200,
    location: 'Aspen, CO',
    bedrooms: 3,
    bathrooms: 2,
    sqft: 1800,
    type: 'house',
    status: 'for-rent',
    images: [
      'https://images.pexels.com/photos/2082090/pexels-photo-2082090.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/2082087/pexels-photo-2082087.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Stunning mountain retreat with panoramic views, ski-in/ski-out access, and luxury mountain amenities.',
    features: ['Mountain Views', 'Ski Access', 'Hot Tub', 'Fireplace', 'Furnished'],
    yearBuilt: 2015,
    parking: 2,
    isNFT: false
  },
  {
    id: '7',
    title: 'Silicon Valley Tech Hub',
    price: 1950000,
    location: 'Palo Alto, CA',
    bedrooms: 3,
    bathrooms: 2,
    sqft: 2100,
    type: 'house',
    status: 'for-sale',
    images: [
      'https://images.pexels.com/photos/1396132/pexels-photo-1396132.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/2724748/pexels-photo-2724748.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/271816/pexels-photo-271816.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Contemporary home in the heart of Silicon Valley with smart home technology, solar panels, and modern design.',
    features: ['Smart Home', 'Solar Panels', 'Electric Car Charging', 'Home Office', 'Modern Kitchen'],
    yearBuilt: 2019,
    parking: 2,
    isNFT: true,
    walletAddress: '0x742d35cc6634C0532925a3b8D6aD8a7e15b2a9d3'
  },
  {
    id: '8',
    title: 'Urban Luxury Condo',
    price: 3800,
    location: 'SoHo, New York, NY',
    bedrooms: 2,
    bathrooms: 2,
    sqft: 1400,
    type: 'condo',
    status: 'for-rent',
    images: [
      'https://images.pexels.com/photos/2724749/pexels-photo-2724749.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/1643383/pexels-photo-1643383.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Sophisticated condo in trendy SoHo with high-end finishes, floor-to-ceiling windows, and premium building amenities.',
    features: ['City Views', 'Doorman', 'Fitness Center', 'Rooftop Terrace', 'In-Unit Washer/Dryer'],
    yearBuilt: 2017,
    parking: 0,
    isNFT: false
  },
  {
    id: '9',
    title: 'Lakefront Villa',
    price: 2800000,
    location: 'Lake Tahoe, CA',
    bedrooms: 4,
    bathrooms: 3,
    sqft: 3500,
    type: 'house',
    status: 'for-sale',
    images: [
      'https://images.pexels.com/photos/2082090/pexels-photo-2082090.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/1571460/pexels-photo-1571460.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/323780/pexels-photo-323780.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Breathtaking lakefront villa with private dock, panoramic lake views, and luxury amenities. Perfect for year-round living or vacation home.',
    features: ['Lake Views', 'Private Dock', 'Boat Storage', 'Outdoor Kitchen', 'Hot Tub'],
    yearBuilt: 2016,
    parking: 3,
    isNFT: true,
    walletAddress: '0x742d35cc6634C0532925a3b8D6aD8a7e15b2a9d4'
  },
  {
    id: '10',
    title: 'Downtown High-Rise',
    price: 5200,
    location: 'Financial District, Seattle, WA',
    bedrooms: 1,
    bathrooms: 1,
    sqft: 900,
    type: 'apartment',
    status: 'for-rent',
    images: [
      'https://images.pexels.com/photos/1396122/pexels-photo-1396122.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/2121121/pexels-photo-2121121.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Modern high-rise apartment with stunning city and water views. Located in the heart of Seattle\'s financial district.',
    features: ['City Views', 'Concierge', 'Gym', 'Business Center', 'Pet Friendly'],
    yearBuilt: 2020,
    parking: 1,
    isNFT: false
  },
  {
    id: '11',
    title: 'Suburban Family Home',
    price: 675000,
    location: 'Westchester County, NY',
    bedrooms: 4,
    bathrooms: 3,
    sqft: 2800,
    type: 'house',
    status: 'for-sale',
    images: [
      'https://images.pexels.com/photos/1115804/pexels-photo-1115804.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/271816/pexels-photo-271816.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Perfect family home in quiet suburban neighborhood with excellent schools, large backyard, and updated kitchen.',
    features: ['Large Backyard', 'Updated Kitchen', 'Garage', 'Basement', 'Near Schools'],
    yearBuilt: 2005,
    parking: 2,
    isNFT: false
  },
  {
    id: '12',
    title: 'Beachfront Paradise',
    price: 4500000,
    location: 'Malibu, CA',
    bedrooms: 5,
    bathrooms: 5,
    sqft: 4200,
    type: 'house',
    status: 'for-sale',
    images: [
      'https://images.pexels.com/photos/1571460/pexels-photo-1571460.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/2102587/pexels-photo-2102587.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/1643383/pexels-photo-1643383.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Spectacular beachfront estate with direct beach access, infinity pool, and unobstructed ocean views. Architectural masterpiece.',
    features: ['Beach Access', 'Infinity Pool', 'Ocean Views', 'Wine Cellar', 'Guest Cottage'],
    yearBuilt: 2022,
    parking: 4,
    isNFT: true,
    walletAddress: '0x742d35cc6634C0532925a3b8D6aD8a7e15b2a9d5'
  },
  {
    id: '13',
    title: 'Artist Loft Space',
    price: 3200,
    location: 'Arts District, Los Angeles, CA',
    bedrooms: 1,
    bathrooms: 1,
    sqft: 1100,
    type: 'apartment',
    status: 'for-rent',
    images: [
      'https://images.pexels.com/photos/2724749/pexels-photo-2724749.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/1396122/pexels-photo-1396122.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Creative loft space in the vibrant Arts District with high ceilings, exposed brick, and natural light perfect for artists.',
    features: ['High Ceilings', 'Exposed Brick', 'Natural Light', 'Creative Space', 'Gallery District'],
    yearBuilt: 1925,
    parking: 0,
    isNFT: false
  },
  {
    id: '14',
    title: 'Tech Executive Penthouse',
    price: 5800000,
    location: 'SOMA, San Francisco, CA',
    bedrooms: 3,
    bathrooms: 3,
    sqft: 2500,
    type: 'condo',
    status: 'for-sale',
    images: [
      'https://images.pexels.com/photos/1643383/pexels-photo-1643383.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/2121121/pexels-photo-2121121.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/2724748/pexels-photo-2724748.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Ultra-modern penthouse with smart home integration, panoramic bay views, and premium finishes throughout.',
    features: ['Bay Views', 'Smart Home', 'Private Terrace', 'Concierge', 'Valet Parking'],
    yearBuilt: 2021,
    parking: 2,
    isNFT: true,
    walletAddress: '0x742d35cc6634C0532925a3b8D6aD8a7e15b2a9d6'
  },
  {
    id: '15',
    title: 'Country Estate',
    price: 1200000,
    location: 'Napa Valley, CA',
    bedrooms: 6,
    bathrooms: 4,
    sqft: 5200,
    type: 'house',
    status: 'for-sale',
    images: [
      'https://images.pexels.com/photos/323780/pexels-photo-323780.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/1115804/pexels-photo-1115804.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/271816/pexels-photo-271816.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Magnificent country estate on 5 acres with vineyard views, wine cellar, and entertaining spaces. Perfect for luxury living.',
    features: ['Vineyard Views', 'Wine Cellar', '5 Acres', 'Guest House', 'Pool'],
    yearBuilt: 2010,
    parking: 4,
    isNFT: false
  },
  {
    id: '16',
    title: 'Modern Townhouse',
    price: 4800,
    location: 'Capitol Hill, Washington, DC',
    bedrooms: 3,
    bathrooms: 2,
    sqft: 1900,
    type: 'townhouse',
    status: 'for-rent',
    images: [
      'https://images.pexels.com/photos/2635038/pexels-photo-2635038.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/2724748/pexels-photo-2724748.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Stylish townhouse in historic Capitol Hill with modern updates, private patio, and walking distance to metro.',
    features: ['Private Patio', 'Metro Access', 'Updated Kitchen', 'Hardwood Floors', 'Historic District'],
    yearBuilt: 2018,
    parking: 1,
    isNFT: false
  },
  {
    id: '17',
    title: 'Luxury High-Rise Condo',
    price: 1650000,
    location: 'River North, Chicago, IL',
    bedrooms: 2,
    bathrooms: 2,
    sqft: 1600,
    type: 'condo',
    status: 'for-sale',
    images: [
      'https://images.pexels.com/photos/1396122/pexels-photo-1396122.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/1643383/pexels-photo-1643383.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Elegant high-rise condo with river views, premium finishes, and world-class building amenities in River North.',
    features: ['River Views', 'Doorman', 'Pool', 'Fitness Center', 'Valet Parking'],
    yearBuilt: 2019,
    parking: 1,
    isNFT: true,
    walletAddress: '0x742d35cc6634C0532925a3b8D6aD8a7e15b2a9d7'
  },
  {
    id: '18',
    title: 'Desert Modern Oasis',
    price: 1450000,
    location: 'Scottsdale, AZ',
    bedrooms: 3,
    bathrooms: 3,
    sqft: 2400,
    type: 'house',
    status: 'for-sale',
    images: [
      'https://images.pexels.com/photos/2082090/pexels-photo-2082090.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/323780/pexels-photo-323780.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Stunning desert modern home with mountain views, resort-style pool, and indoor-outdoor living spaces.',
    features: ['Mountain Views', 'Resort Pool', 'Outdoor Kitchen', 'Desert Landscaping', 'Solar Power'],
    yearBuilt: 2020,
    parking: 2,
    isNFT: false
  },
  {
    id: '19',
    title: 'Historic Mansion',
    price: 3500000,
    location: 'Garden District, New Orleans, LA',
    bedrooms: 6,
    bathrooms: 5,
    sqft: 6200,
    type: 'house',
    status: 'for-sale',
    images: [
      'https://images.pexels.com/photos/1115804/pexels-photo-1115804.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/323780/pexels-photo-323780.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/271816/pexels-photo-271816.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Magnificent antebellum mansion in the prestigious Garden District with original architectural details and modern amenities.',
    features: ['Historic Details', 'Grand Staircase', 'Formal Gardens', 'Carriage House', 'Period Features'],
    yearBuilt: 1875,
    parking: 3,
    isNFT: true,
    walletAddress: '0x742d35cc6634C0532925a3b8D6aD8a7e15b2a9d8'
  },
  {
    id: '20',
    title: 'Minimalist Studio',
    price: 2800,
    location: 'West Village, New York, NY',
    bedrooms: 1,
    bathrooms: 1,
    sqft: 550,
    type: 'apartment',
    status: 'for-rent',
    images: [
      'https://images.pexels.com/photos/2724749/pexels-photo-2724749.jpeg?auto=compress&cs=tinysrgb&w=800',
      'https://images.pexels.com/photos/2724748/pexels-photo-2724748.jpeg?auto=compress&cs=tinysrgb&w=800'
    ],
    description: 'Beautifully designed minimalist studio in charming West Village with modern amenities and classic NYC character.',
    features: ['Minimalist Design', 'Modern Kitchen', 'Exposed Brick', 'Natural Light', 'Prime Location'],
    yearBuilt: 1920,
    parking: 0,
    isNFT: false
  }
];

export const mockUser: User = {
  id: '1',
  name: 'Alex Thompson',
  email: 'alex@example.com',
  walletConnected: false,
  favorites: ['1', '4', '9', '17'],
  savedSearches: [
    {
      id: '1',
      name: 'Downtown Apartments',
      filters: {
        type: 'apartment',
        minPrice: 500000,
        maxPrice: 1000000,
        location: 'Manhattan'
      },
      createdAt: '2025-01-10'
    },
    {
      id: '2',
      name: 'Luxury Homes',
      filters: {
        type: 'house',
        minPrice: 2000000,
        bedrooms: 4
      },
      createdAt: '2025-01-08'
    },
    {
      id: '3',
      name: 'NFT Properties',
      filters: {
        minPrice: 1000000,
        maxPrice: 5000000
      },
      createdAt: '2025-01-05'
    }
  ]
};

export const mockAgents = [
  {
    id: '1',
    name: 'Sarah Johnson',
    email: 'sarah.johnson@propchain.com',
    phone: '+1 (555) 123-4567',
    rating: 4.9,
    reviews: 127,
    specialties: ['Luxury Homes', 'NFT Properties', 'Investment Properties'],
    image: 'https://images.pexels.com/photos/2381069/pexels-photo-2381069.jpeg?auto=compress&cs=tinysrgb&w=100'
  },
  {
    id: '2',
    name: 'Michael Chen',
    email: 'michael.chen@propchain.com',
    phone: '+1 (555) 234-5678',
    rating: 4.8,
    reviews: 89,
    specialties: ['Tech Properties', 'Modern Condos', 'Urban Living'],
    image: 'https://images.pexels.com/photos/2379004/pexels-photo-2379004.jpeg?auto=compress&cs=tinysrgb&w=100'
  },
  {
    id: '3',
    name: 'Emma Rodriguez',
    email: 'emma.rodriguez@propchain.com',
    phone: '+1 (555) 345-6789',
    rating: 4.9,
    reviews: 156,
    specialties: ['Family Homes', 'Suburban Properties', 'First-Time Buyers'],
    image: 'https://images.pexels.com/photos/2381069/pexels-photo-2381069.jpeg?auto=compress&cs=tinysrgb&w=100'
  }
];

export const mockMarketData = {
  totalProperties: 2847,
  totalValue: '$8.2B',
  averagePrice: '$1.2M',
  monthlyGrowth: '+12.5%',
  nftProperties: 342,
  topLocations: [
    { name: 'Manhattan, NY', count: 156, avgPrice: '$2.1M' },
    { name: 'Beverly Hills, CA', count: 89, avgPrice: '$3.8M' },
    { name: 'Miami Beach, FL', count: 134, avgPrice: '$1.9M' },
    { name: 'Palo Alto, CA', count: 67, avgPrice: '$2.7M' },
    { name: 'Boston, MA', count: 98, avgPrice: '$1.4M' }
  ],
  recentSales: [
    { property: 'Luxury Penthouse', price: '$4.2M', location: 'Manhattan', date: '2 days ago' },
    { property: 'Modern Villa', price: '$2.8M', location: 'Beverly Hills', date: '1 week ago' },
    { property: 'Beachfront Condo', price: '$1.9M', location: 'Miami Beach', date: '2 weeks ago' }
  ]
};
</file>

<file path="src/pages/DashboardPage.tsx">
import React from 'react';
import { User, Wallet, Heart, Search, TrendingUp, Star, Shield } from 'lucide-react';
import { mockUser, mockMarketData } from '../data/mockData';

interface DashboardPageProps {
  walletConnected: boolean;
  onConnectWallet: () => void;
}

export const DashboardPage: React.FC<DashboardPageProps> = ({ 
  walletConnected, 
  onConnectWallet 
}) => {
  return (
    <div className="min-h-screen bg-gradient-to-br from-indigo-50 via-purple-50/30 to-blue-50/30 relative overflow-hidden">
      {/* Background Elements */}
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_40%_20%,rgba(99,102,241,0.05),transparent_60%)]"></div>
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_60%_80%,rgba(139,92,246,0.05),transparent_60%)]"></div>
      <div className="absolute top-0 left-0 w-full h-full bg-[linear-gradient(135deg,transparent_0%,rgba(59,130,246,0.02)_50%,transparent_100%)]"></div>
      <div className="absolute top-10 right-10 w-72 h-72 bg-gradient-to-bl from-indigo-200/20 to-transparent rounded-full blur-3xl animate-pulse"></div>
      <div className="absolute bottom-10 left-10 w-96 h-96 bg-gradient-to-tr from-purple-200/20 to-transparent rounded-full blur-3xl animate-pulse delay-1000"></div>
      
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Header */}
        <div className="mb-8 relative z-10">
          <h1 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            Dashboard
          </h1>
          <p className="text-xl text-gray-600">
            Welcome back, {mockUser.name}! Here's your property portfolio overview.
          </p>
        </div>

        {/* Stats Cards */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8 relative z-10">
          <div className="bg-white/90 backdrop-blur-sm p-6 rounded-xl shadow-xl border border-white/20 hover:shadow-2xl transition-all duration-300">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">Favorite Properties</p>
                <p className="text-2xl font-bold text-gray-900">{mockUser.favorites.length}</p>
              </div>
              <Heart className="w-8 h-8 text-red-500" />
            </div>
          </div>

          <div className="bg-white/90 backdrop-blur-sm p-6 rounded-xl shadow-xl border border-white/20 hover:shadow-2xl transition-all duration-300">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">Saved Searches</p>
                <p className="text-2xl font-bold text-gray-900">{mockUser.savedSearches.length}</p>
              </div>
              <Search className="w-8 h-8 text-blue-500" />
            </div>
          </div>

          <div className="bg-white/90 backdrop-blur-sm p-6 rounded-xl shadow-xl border border-white/20 hover:shadow-2xl transition-all duration-300">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">Avg Property Value</p>
                <p className="text-2xl font-bold text-gray-900">{mockMarketData.averagePrice}</p>
              </div>
              <TrendingUp className="w-8 h-8 text-emerald-500" />
            </div>
          </div>

          <div className="bg-white/90 backdrop-blur-sm p-6 rounded-xl shadow-xl border border-white/20 hover:shadow-2xl transition-all duration-300">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-gray-600">Wallet Status</p>
                <p className={`text-sm font-semibold ${walletConnected ? 'text-emerald-600' : 'text-red-600'}`}>
                  {walletConnected ? 'Connected' : 'Disconnected'}
                </p>
              </div>
              <Wallet className={`w-8 h-8 ${walletConnected ? 'text-emerald-500' : 'text-gray-400'}`} />
            </div>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8 relative z-10">
          {/* Main Content */}
          <div className="lg:col-span-2 space-y-8">
            {/* Recent Activity */}
            <div className="bg-white/90 backdrop-blur-sm rounded-xl shadow-xl border border-white/20 p-6">
              <h3 className="text-xl font-semibold mb-6">Recent Activity</h3>
              <div className="space-y-4">
                <div className="flex items-center space-x-3 p-4 bg-blue-50 rounded-lg">
                  <Heart className="w-5 h-5 text-red-500" />
                  <div className="flex-1">
                    <p className="font-medium">Added property to favorites</p>
                    <p className="text-sm text-gray-600">Modern Downtown Loft • 2 hours ago</p>
                  </div>
                </div>
                
                <div className="flex items-center space-x-3 p-4 bg-emerald-50 rounded-lg">
                  <Search className="w-5 h-5 text-emerald-500" />
                  <div className="flex-1">
                    <p className="font-medium">Saved new search</p>
                    <p className="text-sm text-gray-600">Downtown Apartments • 1 day ago</p>
                  </div>
                </div>
                
                <div className="flex items-center space-x-3 p-4 bg-purple-50 rounded-lg">
                  <Shield className="w-5 h-5 text-purple-500" />
                  <div className="flex-1">
                    <p className="font-medium">Viewed NFT property</p>
                    <p className="text-sm text-gray-600">Waterfront Penthouse • 3 days ago</p>
                  </div>
                </div>
              </div>
            </div>

            {/* Saved Searches */}
            <div className="bg-white/90 backdrop-blur-sm rounded-xl shadow-xl border border-white/20 p-6">
              <h3 className="text-xl font-semibold mb-6">Saved Searches</h3>
              <div className="space-y-4">
                {mockUser.savedSearches.map((search) => (
                  <div key={search.id} className="border border-gray-200/50 bg-white/50 rounded-lg p-4 hover:border-blue-300 hover:bg-white/80 transition-all duration-300 cursor-pointer backdrop-blur-sm">
                    <div className="flex justify-between items-start">
                      <div>
                        <h4 className="font-medium text-gray-900 mb-1">{search.name}</h4>
                        <div className="text-sm text-gray-600">
                          {search.filters.type && <span className="capitalize">{search.filters.type} • </span>}
                          {search.filters.location && <span>{search.filters.location} • </span>}
                          {search.filters.minPrice && <span>${search.filters.minPrice.toLocaleString()}</span>}
                          {search.filters.maxPrice && <span> - ${search.filters.maxPrice.toLocaleString()}</span>}
                        </div>
                        <div className="text-xs text-gray-500 mt-1">Created {search.createdAt}</div>
                      </div>
                      <button className="text-blue-600 hover:text-blue-700 text-sm font-medium">
                        Run Search
                      </button>
                    </div>
                  </div>
                ))}
              </div>
            </div>
          </div>

          {/* Sidebar */}
          <div className="lg:col-span-1 space-y-8">
            {/* Wallet Section */}
            <div className="bg-white/90 backdrop-blur-sm rounded-xl shadow-xl border border-white/20 p-6">
              <h3 className="text-xl font-semibold mb-6">Wallet Connection</h3>
              {walletConnected ? (
                <div className="space-y-4">
                  <div className="flex items-center space-x-3">
                    <div className="w-3 h-3 bg-emerald-500 rounded-full"></div>
                    <span className="text-emerald-600 font-medium">Wallet Connected</span>
                  </div>
                  <div className="text-sm text-gray-600 break-all bg-gray-50 p-3 rounded-lg">
                    0x742d35cc6634C0532925a3b8D6aD8a7e15b2a9d1
                  </div>
                  <button className="w-full border border-red-300 text-red-600 hover:bg-red-50 py-2 px-4 rounded-lg transition-colors">
                    Disconnect Wallet
                  </button>
                </div>
              ) : (
                <div className="space-y-4">
                  <div className="text-center py-6">
                    <Wallet className="w-12 h-12 text-gray-400 mx-auto mb-3" />
                    <p className="text-gray-600 mb-4">Connect your wallet to access NFT properties and blockchain features.</p>
                    <button
                      onClick={onConnectWallet}
                      className="w-full bg-gradient-to-r from-blue-600 to-emerald-500 hover:from-blue-700 hover:to-emerald-600 text-white py-3 px-4 rounded-lg font-semibold transition-all duration-300"
                    >
                      Connect Wallet
                    </button>
                  </div>
                </div>
              )}
            </div>

            {/* Quick Actions */}
            <div className="bg-white/90 backdrop-blur-sm rounded-xl shadow-xl border border-white/20 p-6">
              <h3 className="text-xl font-semibold mb-6">Quick Actions</h3>
              <div className="space-y-3">
                <button className="w-full text-left p-3 hover:bg-white/50 rounded-lg transition-colors flex items-center space-x-3">
                  <Search className="w-5 h-5 text-blue-500" />
                  <span>Create New Search</span>
                </button>
                <button className="w-full text-left p-3 hover:bg-white/50 rounded-lg transition-colors flex items-center space-x-3">
                  <User className="w-5 h-5 text-emerald-500" />
                  <span>Update Profile</span>
                </button>
                <button className="w-full text-left p-3 hover:bg-white/50 rounded-lg transition-colors flex items-center space-x-3">
                  <Star className="w-5 h-5 text-yellow-500" />
                  <span>Rate Properties</span>
                </button>
              </div>
            </div>

            {/* Market Insights */}
            <div className="bg-white/90 backdrop-blur-sm rounded-xl shadow-xl border border-white/20 p-6">
              <h3 className="text-xl font-semibold mb-6">Market Insights</h3>
              <div className="space-y-4">
                <div className="p-4 bg-emerald-50/80 backdrop-blur-sm rounded-lg border border-emerald-100/50">
                  <div className="flex items-center space-x-2 mb-2">
                    <TrendingUp className="w-4 h-4 text-emerald-600" />
                    <span className="font-medium text-emerald-800">Market Up</span>
                  </div>
                  <p className="text-sm text-emerald-700">
                    Property values increased {mockMarketData.monthlyGrowth} this quarter
                  </p>
                </div>
                
                <div className="p-4 bg-blue-50/80 backdrop-blur-sm rounded-lg border border-blue-100/50">
                  <div className="flex items-center space-x-2 mb-2">
                    <Shield className="w-4 h-4 text-blue-600" />
                    <span className="font-medium text-blue-800">NFT Growth</span>
                  </div>
                  <p className="text-sm text-blue-700">
                    {mockMarketData.nftProperties} NFT properties available
                  </p>
                </div>
                
                <div className="p-4 bg-purple-50/80 backdrop-blur-sm rounded-lg border border-purple-100/50">
                  <div className="flex items-center space-x-2 mb-2">
                    <TrendingUp className="w-4 h-4 text-purple-600" />
                    <span className="font-medium text-purple-800">Top Location</span>
                  </div>
                  <p className="text-sm text-purple-700">
                    {mockMarketData.topLocations[0].name} - {mockMarketData.topLocations[0].avgPrice} avg
                  </p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};
</file>

<file path="src/pages/FavoritesPage.tsx">
import React from 'react';
import { Heart } from 'lucide-react';
import { PropertyCard } from '../components/PropertyCard/PropertyCard';
import { mockProperties } from '../data/mockData';

interface FavoritesPageProps {
  favorites: string[];
  onToggleFavorite: (id: string) => void;
  onPropertyClick: (id: string) => void;
}

export const FavoritesPage: React.FC<FavoritesPageProps> = ({ 
  favorites, 
  onToggleFavorite, 
  onPropertyClick 
}) => {
  const favoriteProperties = mockProperties.filter(p => favorites.includes(p.id));

  return (
    <div className="min-h-screen bg-gradient-to-br from-rose-50 via-pink-50/30 to-red-50/30 relative overflow-hidden">
      {/* Background Elements */}
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_30%_40%,rgba(244,63,94,0.05),transparent_60%)]"></div>
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_70%_60%,rgba(236,72,153,0.05),transparent_60%)]"></div>
      <div className="absolute top-20 right-20 w-64 h-64 bg-gradient-to-bl from-rose-200/20 to-transparent rounded-full blur-3xl animate-pulse"></div>
      <div className="absolute bottom-20 left-20 w-80 h-80 bg-gradient-to-tr from-pink-200/20 to-transparent rounded-full blur-3xl animate-pulse delay-1000"></div>
      
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="mb-8 relative z-10">
          <h1 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4 flex items-center">
            <Heart className="w-8 h-8 text-red-500 mr-3 fill-current" />
            Favorite Properties
          </h1>
          <p className="text-xl text-gray-600">
            Your saved properties are here for easy access.
          </p>
        </div>

        {favoriteProperties.length > 0 ? (
          <>
            <div className="mb-6 relative z-10">
              <span className="text-gray-600">
                <span className="font-semibold text-gray-900">{favoriteProperties.length}</span> saved properties
              </span>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 relative z-10">
              {favoriteProperties.map((property) => (
                <PropertyCard
                  key={property.id}
                  property={{...property, favorited: true}}
                  onToggleFavorite={onToggleFavorite}
                  onClick={onPropertyClick}
                />
              ))}
            </div>
          </>
        ) : (
          <div className="text-center py-16 relative z-10">
            <div className="w-24 h-24 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-6">
              <Heart className="w-12 h-12 text-gray-400" />
            </div>
            <h3 className="text-xl font-semibold text-gray-900 mb-2">No favorites yet</h3>
            <p className="text-gray-600 mb-6">Start browsing properties and save your favorites here.</p>
            <a
              href="/listings"
              className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors inline-block"
            >
              Browse Properties
            </a>
          </div>
        )}
      </div>
    </div>
  );
};
</file>

<file path="src/pages/HomePage.tsx">
import React from 'react';
import { Link } from 'react-router-dom';
import { Search, TrendingUp, Shield, Zap, ArrowRight, Star } from 'lucide-react';
import { PropertyCard } from '../components/PropertyCard/PropertyCard';
import { mockProperties, mockMarketData } from '../data/mockData';

interface HomePageProps {
  onToggleFavorite: (id: string) => void;
  onPropertyClick: (id: string) => void;
}

export const HomePage: React.FC<HomePageProps> = ({ onToggleFavorite, onPropertyClick }) => {
  const featuredProperties = mockProperties.slice(0, 3);

  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <section className="relative bg-gradient-to-br from-slate-900 via-blue-900 to-indigo-900 text-white overflow-hidden">
        {/* Animated background */}
        <div className="absolute inset-0">
          <div className="absolute inset-0 bg-[radial-gradient(circle_at_30%_20%,rgba(59,130,246,0.3),transparent_50%)]"></div>
          <div className="absolute inset-0 bg-[radial-gradient(circle_at_70%_80%,rgba(16,185,129,0.3),transparent_50%)]"></div>
          <div className="absolute inset-0 bg-[radial-gradient(circle_at_90%_10%,rgba(139,92,246,0.2),transparent_50%)]"></div>
        </div>
        
        {/* Animated background elements */}
        <div className="absolute top-20 left-20 w-72 h-72 bg-blue-400/10 rounded-full blur-3xl animate-pulse"></div>
        <div className="absolute bottom-20 right-20 w-96 h-96 bg-emerald-400/10 rounded-full blur-3xl animate-pulse delay-1000"></div>
        <div className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[800px] h-[800px] bg-gradient-to-r from-purple-500/5 to-pink-500/5 rounded-full blur-3xl animate-pulse delay-500"></div>
        
        <div className="relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24 md:py-32">
          <div className="text-center">
            <h1 className="text-4xl md:text-6xl font-bold mb-6 animate-fade-in">
              Find Your Dream Property
              <span className="block text-transparent bg-clip-text bg-gradient-to-r from-emerald-400 to-blue-400">
                On The Blockchain
              </span>
            </h1>
            <p className="text-xl md:text-2xl text-gray-200 mb-8 max-w-3xl mx-auto animate-fade-in delay-300">
              Discover luxury real estate with blockchain technology. Secure, transparent, and revolutionary property investments.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center animate-fade-in delay-500">
              <Link
                to="/listings"
                className="bg-gradient-to-r from-emerald-500 to-blue-500 hover:from-emerald-600 hover:to-blue-600 text-white px-8 py-4 rounded-lg font-semibold text-lg transition-all duration-300 transform hover:scale-105 shadow-xl hover:shadow-2xl"
              >
                Explore Properties
              </Link>
              <button className="border-2 border-white/30 hover:border-white text-white px-8 py-4 rounded-lg font-semibold text-lg transition-all duration-300 hover:bg-white/10 backdrop-blur-sm">
                Learn More
              </button>
            </div>
          </div>
        </div>
      </section>

      {/* Stats Section */}
      <section className="py-16 bg-gradient-to-b from-white to-gray-50 relative overflow-hidden">
        <div className="absolute inset-0 bg-[linear-gradient(45deg,transparent_25%,rgba(59,130,246,0.02)_50%,transparent_75%)]"></div>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-12">
            <h2 className="text-2xl md:text-3xl font-bold text-gray-900 mb-4">
              Market Overview
            </h2>
            <p className="text-lg text-gray-600">
              Real-time insights from our blockchain-powered marketplace
            </p>
          </div>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
            <div className="text-center">
              <div className="text-3xl font-bold text-blue-600 mb-2">{mockMarketData.totalProperties.toLocaleString()}+</div>
              <div className="text-gray-600">Properties Listed</div>
            </div>
            <div className="text-center">
              <div className="text-3xl font-bold text-emerald-600 mb-2">{mockMarketData.totalValue}</div>
              <div className="text-gray-600">Total Value</div>
            </div>
            <div className="text-center">
              <div className="text-3xl font-bold text-orange-600 mb-2">{mockMarketData.nftProperties}</div>
              <div className="text-gray-600">NFT Properties</div>
            </div>
            <div className="text-center">
              <div className="text-3xl font-bold text-purple-600 mb-2">{mockMarketData.monthlyGrowth}</div>
              <div className="text-gray-600">Monthly Growth</div>
            </div>
          </div>
        </div>
      </section>

      {/* Features Section */}
      <section className="py-20 bg-gradient-to-br from-gray-50 via-blue-50/30 to-emerald-50/30 relative overflow-hidden">
        <div className="absolute inset-0 bg-[radial-gradient(circle_at_20%_50%,rgba(59,130,246,0.05),transparent_70%)]"></div>
        <div className="absolute inset-0 bg-[radial-gradient(circle_at_80%_20%,rgba(16,185,129,0.05),transparent_70%)]"></div>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
              Why Choose PropChain?
            </h2>
            <p className="text-xl text-gray-600 max-w-2xl mx-auto">
              Experience the future of real estate with blockchain-powered transparency and security.
            </p>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            <div className="bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition-shadow group">
              <div className="w-12 h-12 bg-gradient-to-r from-blue-500 to-emerald-500 rounded-lg flex items-center justify-center mb-6 group-hover:scale-110 transition-transform">
                <Shield className="w-6 h-6 text-white" />
              </div>
              <h3 className="text-xl font-semibold mb-4">Blockchain Security</h3>
              <p className="text-gray-600">
                Every transaction is secured by blockchain technology, ensuring transparency and immutable records.
              </p>
            </div>
            
            <div className="bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition-shadow group">
              <div className="w-12 h-12 bg-gradient-to-r from-emerald-500 to-blue-500 rounded-lg flex items-center justify-center mb-6 group-hover:scale-110 transition-transform">
                <Zap className="w-6 h-6 text-white" />
              </div>
              <h3 className="text-xl font-semibold mb-4">Instant Verification</h3>
              <p className="text-gray-600">
                Smart contracts enable instant property verification and seamless ownership transfers.
              </p>
            </div>
            
            <div className="bg-white p-8 rounded-xl shadow-lg hover:shadow-xl transition-shadow group">
              <div className="w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg flex items-center justify-center mb-6 group-hover:scale-110 transition-transform">
                <TrendingUp className="w-6 h-6 text-white" />
              </div>
              <h3 className="text-xl font-semibold mb-4">NFT Properties</h3>
              <p className="text-gray-600">
                Own unique digital property tokens that represent real estate assets on the blockchain.
              </p>
            </div>
          </div>
        </div>
      </section>

      {/* Featured Properties */}
      <section className="py-20 bg-gradient-to-b from-white to-gray-50/50 relative">
        <div className="absolute inset-0 bg-[linear-gradient(135deg,transparent_0%,rgba(59,130,246,0.02)_50%,transparent_100%)]"></div>
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center mb-12">
            <div>
              <h2 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
                Featured Properties
              </h2>
              <p className="text-xl text-gray-600">
                Discover our handpicked selection of premium properties.
              </p>
            </div>
            <Link
              to="/listings"
              className="flex items-center space-x-2 text-blue-600 hover:text-blue-700 font-semibold transition-colors group"
            >
              <span>View All</span>
              <ArrowRight className="w-4 h-4 group-hover:translate-x-1 transition-transform" />
            </Link>
          </div>
          
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {featuredProperties.map((property) => (
              <PropertyCard
                key={property.id}
                property={property}
                onToggleFavorite={onToggleFavorite}
                onClick={onPropertyClick}
              />
            ))}
          </div>
        </div>
      </section>

      {/* CTA Section */}
      <section className="py-20 bg-gradient-to-br from-blue-600 via-indigo-700 to-emerald-600 text-white relative overflow-hidden">
        <div className="absolute inset-0 bg-[radial-gradient(circle_at_30%_30%,rgba(255,255,255,0.1),transparent_60%)]"></div>
        <div className="absolute inset-0 bg-[radial-gradient(circle_at_70%_70%,rgba(255,255,255,0.05),transparent_60%)]"></div>
        <div className="absolute top-0 left-0 w-full h-full bg-gradient-to-r from-transparent via-white/5 to-transparent transform -skew-y-1"></div>
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h2 className="text-3xl md:text-4xl font-bold mb-6">
            Ready to Start Your Property Journey?
          </h2>
          <p className="text-xl text-blue-100 mb-8">
            Join thousands of investors who trust PropChain for their real estate needs.
          </p>
          <div className="flex flex-col sm:flex-row gap-4 justify-center">
            <Link
              to="/listings"
              className="bg-white text-blue-600 hover:bg-gray-100 px-8 py-4 rounded-lg font-semibold text-lg transition-all duration-300 transform hover:scale-105 shadow-lg"
            >
              Browse Properties
            </Link>
            <button className="border-2 border-white/30 hover:border-white text-white hover:bg-white/10 px-8 py-4 rounded-lg font-semibold text-lg transition-all duration-300">
              Contact Sales
            </button>
          </div>
        </div>
      </section>
    </div>
  );
};
</file>

<file path="src/pages/ListingsPage.tsx">
import React, { useState, useMemo } from 'react';
import { PropertyCard } from '../components/PropertyCard/PropertyCard';
import { SearchFilters } from '../components/SearchFilters/SearchFilters';
import { mockProperties } from '../data/mockData';
import { PropertyFilters } from '../types';

interface ListingsPageProps {
  onToggleFavorite: (id: string) => void;
  onPropertyClick: (id: string) => void;
}

export const ListingsPage: React.FC<ListingsPageProps> = ({ 
  onToggleFavorite, 
  onPropertyClick 
}) => {
  const [filters, setFilters] = useState<PropertyFilters>({});
  const [showFilters, setShowFilters] = useState(false);
  const [sortBy, setSortBy] = useState('price-desc');

  const filteredProperties = useMemo(() => {
    let filtered = [...mockProperties];

    // Apply filters
    if (filters.minPrice) {
      filtered = filtered.filter(p => p.price >= filters.minPrice!);
    }
    if (filters.maxPrice) {
      filtered = filtered.filter(p => p.price <= filters.maxPrice!);
    }
    if (filters.bedrooms) {
      filtered = filtered.filter(p => p.bedrooms >= filters.bedrooms!);
    }
    if (filters.bathrooms) {
      filtered = filtered.filter(p => p.bathrooms >= filters.bathrooms!);
    }
    if (filters.type) {
      filtered = filtered.filter(p => p.type === filters.type);
    }
    if (filters.status) {
      filtered = filtered.filter(p => p.status === filters.status);
    }
    if (filters.location) {
      filtered = filtered.filter(p => 
        p.location.toLowerCase().includes(filters.location!.toLowerCase()) ||
        p.title.toLowerCase().includes(filters.location!.toLowerCase())
      );
    }

    // Apply sorting
    switch (sortBy) {
      case 'price-asc':
        filtered.sort((a, b) => a.price - b.price);
        break;
      case 'price-desc':
        filtered.sort((a, b) => b.price - a.price);
        break;
      case 'sqft-desc':
        filtered.sort((a, b) => b.sqft - a.sqft);
        break;
      case 'year-desc':
        filtered.sort((a, b) => b.yearBuilt - a.yearBuilt);
        break;
      default:
        break;
    }

    return filtered;
  }, [filters, sortBy]);

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 via-blue-50/20 to-emerald-50/20 relative overflow-hidden">
      {/* Background Elements */}
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_25%_25%,rgba(59,130,246,0.03),transparent_50%)]"></div>
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_75%_75%,rgba(16,185,129,0.03),transparent_50%)]"></div>
      <div className="absolute top-0 right-0 w-96 h-96 bg-gradient-to-bl from-blue-100/20 to-transparent rounded-full blur-3xl"></div>
      <div className="absolute bottom-0 left-0 w-96 h-96 bg-gradient-to-tr from-emerald-100/20 to-transparent rounded-full blur-3xl"></div>
      
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Page Header */}
        <div className="mb-8 relative">
          <h1 className="text-3xl md:text-4xl font-bold text-gray-900 mb-4">
            Property Listings
          </h1>
          <p className="text-xl text-gray-600">
            Discover your perfect property from our extensive collection.
          </p>
        </div>

        {/* Search and Filters */}
        <div className="mb-8 relative z-10">
          <SearchFilters
            filters={filters}
            onFiltersChange={setFilters}
            showFilters={showFilters}
            onToggleFilters={() => setShowFilters(!showFilters)}
          />
        </div>

        {/* Results Header */}
        <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-8 gap-4 relative z-10">
          <div className="text-gray-600">
            <span className="font-semibold text-gray-900">{filteredProperties.length}</span> properties found
          </div>
          
          <div className="flex items-center space-x-4">
            <label className="text-sm font-medium text-gray-700">Sort by:</label>
            <select
              value={sortBy}
              onChange={(e) => setSortBy(e.target.value)}
              className="border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
            >
              <option value="price-desc">Price: High to Low</option>
              <option value="price-asc">Price: Low to High</option>
              <option value="sqft-desc">Size: Largest First</option>
              <option value="year-desc">Year Built: Newest First</option>
            </select>
          </div>
        </div>

        {/* Property Grid */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 relative z-10">
          {filteredProperties.map((property) => (
            <PropertyCard
              key={property.id}
              property={property}
              onToggleFavorite={onToggleFavorite}
              onClick={onPropertyClick}
            />
          ))}
        </div>

        {/* Empty State */}
        {filteredProperties.length === 0 && (
          <div className="text-center py-16 relative z-10">
            <div className="w-24 h-24 bg-gray-200 rounded-full flex items-center justify-center mx-auto mb-6">
              <Search className="w-12 h-12 text-gray-400" />
            </div>
            <h3 className="text-xl font-semibold text-gray-900 mb-2">No properties found</h3>
            <p className="text-gray-600 mb-6">Try adjusting your search criteria to see more results.</p>
            <button
              onClick={() => setFilters({})}
              className="bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors"
            >
              Clear Filters
            </button>
          </div>
        )}
      </div>
    </div>
  );
};
</file>

<file path="src/pages/PropertyDetailPage.tsx">
import React, { useState } from 'react';
import { useParams, Link } from 'react-router-dom';
import { 
  ArrowLeft, 
  Heart, 
  Share2, 
  MapPin, 
  Bed, 
  Bath, 
  Square, 
  Car, 
  Calendar,
  Wallet,
  Shield,
  CheckCircle,
  Star
} from 'lucide-react';
import { mockProperties } from '../data/mockData';

interface PropertyDetailPageProps {
  onToggleFavorite: (id: string) => void;
}

export const PropertyDetailPage: React.FC<PropertyDetailPageProps> = ({ onToggleFavorite }) => {
  const { id } = useParams<{ id: string }>();
  const [currentImageIndex, setCurrentImageIndex] = useState(0);
  const [showContactForm, setShowContactForm] = useState(false);

  const property = mockProperties.find(p => p.id === id);

  if (!property) {
    return (
      <div className="min-h-screen bg-gray-50 flex items-center justify-center">
        <div className="text-center">
          <h2 className="text-2xl font-bold text-gray-900 mb-4">Property Not Found</h2>
          <Link to="/listings" className="text-blue-600 hover:text-blue-700">
            ← Back to Listings
          </Link>
        </div>
      </div>
    );
  }

  const formatPrice = (price: number) => {
    if (property.status === 'for-rent' || property.status === 'rented') {
      return `$${price.toLocaleString()}/mo`;
    }
    return `$${price.toLocaleString()}`;
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-indigo-50/30 relative overflow-hidden">
      {/* Background Elements */}
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_20%_80%,rgba(59,130,246,0.04),transparent_60%)]"></div>
      <div className="absolute inset-0 bg-[radial-gradient(circle_at_80%_20%,rgba(139,92,246,0.04),transparent_60%)]"></div>
      <div className="absolute top-0 left-0 w-full h-64 bg-gradient-to-b from-white/50 to-transparent"></div>
      
      {/* Header */}
      <div className="bg-white/80 backdrop-blur-sm border-b border-gray-200/50 relative z-10">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-4">
          <Link 
            to="/listings" 
            className="flex items-center text-gray-600 hover:text-blue-600 transition-colors group"
          >
            <ArrowLeft className="w-4 h-4 mr-2 group-hover:-translate-x-1 transition-transform" />
            Back to Listings
          </Link>
        </div>
      </div>

      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8 relative z-10">
          {/* Main Content */}
          <div className="lg:col-span-2">
            {/* Image Gallery */}
            <div className="bg-white/95 backdrop-blur-sm rounded-xl shadow-xl border border-white/20 overflow-hidden mb-8">
              <div className="relative">
                <img 
                  src={property.images[currentImageIndex]} 
                  alt={property.title}
                  className="w-full h-96 object-cover"
                />
                <div className="absolute top-4 left-4">
                  <span className={`px-3 py-1 rounded-full text-sm font-medium ${
                    property.status === 'for-sale' 
                      ? 'bg-emerald-500 text-white' 
                      : property.status === 'for-rent'
                      ? 'bg-blue-500 text-white'
                      : property.status === 'sold'
                      ? 'bg-gray-500 text-white'
                      : 'bg-orange-500 text-white'
                  }`}>
                    {property.status === 'for-sale' ? 'For Sale' : 
                     property.status === 'for-rent' ? 'For Rent' :
                     property.status === 'sold' ? 'Sold' : 'Rented'}
                  </span>
                </div>
                <div className="absolute top-4 right-4 flex space-x-2">
                  {property.isNFT && (
                    <span className="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-3 py-1 rounded-full text-sm font-medium">
                      NFT Property
                    </span>
                  )}
                  <button
                    onClick={() => onToggleFavorite(property.id)}
                    className={`p-2 rounded-full transition-all duration-200 ${
                      property.favorited 
                        ? 'bg-red-500 text-white hover:bg-red-600' 
                        : 'bg-white/80 text-gray-600 hover:bg-white hover:text-red-500'
                    }`}
                  >
                    <Heart className={`w-5 h-5 ${property.favorited ? 'fill-current' : ''}`} />
                  </button>
                  <button className="p-2 rounded-full bg-white/80 text-gray-600 hover:bg-white hover:text-blue-500 transition-all duration-200">
                    <Share2 className="w-5 h-5" />
                  </button>
                </div>
              </div>
              
              {/* Image Thumbnails */}
              {property.images.length > 1 && (
                <div className="p-4 bg-gray-50 flex space-x-2 overflow-x-auto">
                  {property.images.map((image, index) => (
                    <button
                      key={index}
                      onClick={() => setCurrentImageIndex(index)}
                      className={`flex-shrink-0 w-20 h-16 rounded-lg overflow-hidden border-2 transition-all ${
                        currentImageIndex === index 
                          ? 'border-blue-500 shadow-md' 
                          : 'border-gray-200 hover:border-gray-300'
                      }`}
                    >
                      <img src={image} alt="" className="w-full h-full object-cover" />
                    </button>
                  ))}
                </div>
              )}
            </div>

            {/* Property Details */}
            <div className="bg-white/95 backdrop-blur-sm rounded-xl shadow-xl border border-white/20 p-8 mb-8">
              <div className="flex justify-between items-start mb-6">
                <div>
                  <h1 className="text-3xl font-bold text-gray-900 mb-2">{property.title}</h1>
                  <div className="flex items-center text-gray-600 mb-4">
                    <MapPin className="w-5 h-5 mr-2" />
                    <span className="text-lg">{property.location}</span>
                  </div>
                </div>
                <div className="text-right">
                  <div className="text-3xl font-bold text-blue-600 mb-2">
                    {formatPrice(property.price)}
                  </div>
                  {property.isNFT && (
                    <div className="text-sm text-gray-600">
                      Blockchain Verified
                    </div>
                  )}
                </div>
              </div>

              {/* Property Stats */}
              <div className="grid grid-cols-2 md:grid-cols-4 gap-6 mb-8 p-6 bg-gray-50 rounded-lg">
                <div className="text-center">
                  <div className="flex items-center justify-center mb-2">
                    <Bed className="w-6 h-6 text-blue-600" />
                  </div>
                  <div className="text-2xl font-bold text-gray-900">{property.bedrooms}</div>
                  <div className="text-sm text-gray-600">Bedrooms</div>
                </div>
                <div className="text-center">
                  <div className="flex items-center justify-center mb-2">
                    <Bath className="w-6 h-6 text-blue-600" />
                  </div>
                  <div className="text-2xl font-bold text-gray-900">{property.bathrooms}</div>
                  <div className="text-sm text-gray-600">Bathrooms</div>
                </div>
                <div className="text-center">
                  <div className="flex items-center justify-center mb-2">
                    <Square className="w-6 h-6 text-blue-600" />
                  </div>
                  <div className="text-2xl font-bold text-gray-900">{property.sqft.toLocaleString()}</div>
                  <div className="text-sm text-gray-600">Square Feet</div>
                </div>
                <div className="text-center">
                  <div className="flex items-center justify-center mb-2">
                    <Car className="w-6 h-6 text-blue-600" />
                  </div>
                  <div className="text-2xl font-bold text-gray-900">{property.parking}</div>
                  <div className="text-sm text-gray-600">Parking</div>
                </div>
              </div>

              {/* Description */}
              <div className="mb-8">
                <h3 className="text-xl font-semibold mb-4">Description</h3>
                <p className="text-gray-700 leading-relaxed">{property.description}</p>
              </div>

              {/* Features */}
              <div className="mb-8">
                <h3 className="text-xl font-semibold mb-4">Features & Amenities</h3>
                <div className="grid grid-cols-2 md:grid-cols-3 gap-3">
                  {property.features.map((feature, index) => (
                    <div key={index} className="flex items-center space-x-2 text-gray-700">
                      <CheckCircle className="w-4 h-4 text-emerald-500 flex-shrink-0" />
                      <span>{feature}</span>
                    </div>
                  ))}
                </div>
              </div>

              {/* Property Info */}
              <div className="border-t pt-6">
                <div className="grid grid-cols-1 md:grid-cols-3 gap-6 text-sm">
                  <div>
                    <span className="font-medium text-gray-600">Type:</span>
                    <div className="capitalize text-gray-900 mt-1">{property.type}</div>
                  </div>
                  <div>
                    <span className="font-medium text-gray-600">Year Built:</span>
                    <div className="text-gray-900 mt-1">{property.yearBuilt}</div>
                  </div>
                  <div>
                    <span className="font-medium text-gray-600">Property ID:</span>
                    <div className="text-gray-900 mt-1">#{property.id}</div>
                  </div>
                </div>
              </div>

              {/* Blockchain Info */}
              {property.isNFT && (
                <div className="mt-8 p-6 bg-gradient-to-r from-purple-50 to-pink-50 rounded-lg border border-purple-200">
                  <div className="flex items-start space-x-3">
                    <Shield className="w-6 h-6 text-purple-600 mt-1" />
                    <div>
                      <h4 className="font-semibold text-gray-900 mb-2">Blockchain Verified Property</h4>
                      <p className="text-gray-700 mb-3">
                        This property is represented as an NFT on the blockchain, ensuring transparent ownership and secure transactions.
                      </p>
                      <div className="text-xs text-gray-600">
                        <span className="font-medium">Wallet Address:</span> {property.walletAddress}
                      </div>
                    </div>
                  </div>
                </div>
              )}
            </div>
          </div>

          {/* Sidebar */}
          <div className="lg:col-span-1">
            <div className="bg-white/95 backdrop-blur-sm rounded-xl shadow-xl border border-white/20 p-6 sticky top-8">
              <div className="mb-6">
                <div className="text-3xl font-bold text-gray-900 mb-2">
                  {formatPrice(property.price)}
                </div>
                <div className="text-gray-600">
                  ${Math.round(property.price / property.sqft).toLocaleString()} per sqft
                </div>
              </div>

              <div className="space-y-4 mb-6">
                <button
                  onClick={() => setShowContactForm(true)}
                  className="w-full bg-gradient-to-r from-blue-600 to-emerald-500 hover:from-blue-700 hover:to-emerald-600 text-white py-3 px-4 rounded-lg font-semibold transition-all duration-300 transform hover:scale-105 shadow-lg hover:shadow-xl"
                >
                  Contact Agent
                </button>
                
                <button className="w-full border-2 border-blue-600 text-blue-600 hover:bg-blue-50 py-3 px-4 rounded-lg font-semibold transition-colors">
                  Schedule Tour
                </button>

                {property.isNFT && (
                  <button className="w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white py-3 px-4 rounded-lg font-semibold transition-all duration-300 flex items-center justify-center space-x-2">
                    <Wallet className="w-4 h-4" />
                    <span>Purchase NFT</span>
                  </button>
                )}
              </div>

              {/* Agent Info */}
              <div className="border-t pt-6">
                <div className="flex items-center space-x-3 mb-4">
                  <img 
                    src="https://images.pexels.com/photos/2381069/pexels-photo-2381069.jpeg?auto=compress&cs=tinysrgb&w=100" 
                    alt="Agent"
                    className="w-12 h-12 rounded-full object-cover"
                  />
                  <div>
                    <div className="font-semibold text-gray-900">Sarah Johnson</div>
                    <div className="text-sm text-gray-600">Licensed Real Estate Agent</div>
                  </div>
                </div>
                
                <div className="flex items-center space-x-1 mb-4">
                  {[...Array(5)].map((_, i) => (
                    <Star key={i} className="w-4 h-4 text-yellow-400 fill-current" />
                  ))}
                  <span className="text-sm text-gray-600 ml-2">(4.9/5 · 127 reviews)</span>
                </div>
                
                <div className="space-y-2 text-sm text-gray-600">
                  <div>📧 sarah.johnson@propchain.com</div>
                  <div>📱 +1 (555) 123-4567</div>
                  <div>🏆 Top Agent 2024</div>
                </div>
              </div>
            </div>

            {/* Mortgage Calculator */}
            <div className="bg-white/95 backdrop-blur-sm rounded-xl shadow-xl border border-white/20 p-6 mt-6">
              <h3 className="text-lg font-semibold mb-4">Mortgage Calculator</h3>
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Down Payment</label>
                  <select className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500">
                    <option>20% ($170,000)</option>
                    <option>15% ($127,500)</option>
                    <option>10% ($85,000)</option>
                    <option>5% ($42,500)</option>
                  </select>
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Interest Rate</label>
                  <input 
                    type="text" 
                    defaultValue="6.5%" 
                    className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">Loan Term</label>
                  <select className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500">
                    <option>30 years</option>
                    <option>25 years</option>
                    <option>20 years</option>
                    <option>15 years</option>
                  </select>
                </div>
                
                <div className="border-t pt-4">
                  <div className="flex justify-between text-lg font-semibold">
                    <span>Monthly Payment:</span>
                    <span className="text-blue-600">$4,234</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      {/* Contact Form Modal */}
      {showContactForm && (
        <div className="fixed inset-0 bg-black/50 flex items-center justify-center p-4 z-50">
          <div className="bg-white rounded-xl shadow-2xl max-w-md w-full p-6">
            <h3 className="text-xl font-semibold mb-4">Contact Agent</h3>
            <form className="space-y-4">
              <input
                type="text"
                placeholder="Your Name"
                className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
              />
              <input
                type="email"
                placeholder="Your Email"
                className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
              />
              <textarea
                placeholder="Message"
                rows={4}
                className="w-full border border-gray-300 rounded-lg px-3 py-2 focus:ring-2 focus:ring-blue-500"
              ></textarea>
              <div className="flex space-x-3">
                <button
                  type="button"
                  onClick={() => setShowContactForm(false)}
                  className="flex-1 border border-gray-300 text-gray-700 py-2 px-4 rounded-lg hover:bg-gray-50 transition-colors"
                >
                  Cancel
                </button>
                <button
                  type="submit"
                  className="flex-1 bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg transition-colors"
                >
                  Send Message
                </button>
              </div>
            </form>
          </div>
        </div>
      )}
    </div>
  );
};
</file>

<file path="src/types/index.ts">
export interface Property {
  id: string;
  title: string;
  price: number;
  location: string;
  bedrooms: number;
  bathrooms: number;
  sqft: number;
  type: 'house' | 'apartment' | 'condo' | 'townhouse';
  status: 'for-sale' | 'for-rent' | 'sold' | 'rented';
  images: string[];
  description: string;
  features: string[];
  yearBuilt: number;
  parking: number;
  isNFT?: boolean;
  walletAddress?: string;
  favorited?: boolean;
}

export interface User {
  id: string;
  name: string;
  email: string;
  walletConnected: boolean;
  walletAddress?: string;
  favorites: string[];
  savedSearches: SavedSearch[];
}

export interface SavedSearch {
  id: string;
  name: string;
  filters: PropertyFilters;
  createdAt: string;
}

export interface PropertyFilters {
  minPrice?: number;
  maxPrice?: number;
  bedrooms?: number;
  bathrooms?: number;
  type?: string;
  status?: string;
  location?: string;
}
</file>

<file path="src/App.tsx">
import React, { useState } from 'react';
import { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';
import { Navbar } from './components/Layout/Navbar';
import { HomePage } from './pages/HomePage';
import { ListingsPage } from './pages/ListingsPage';
import { PropertyDetailPage } from './pages/PropertyDetailPage';
import { FavoritesPage } from './pages/FavoritesPage';
import { DashboardPage } from './pages/DashboardPage';

const AppContent: React.FC = () => {
  const [walletConnected, setWalletConnected] = useState(false);
  const [favorites, setFavorites] = useState(['1', '4']);
  const navigate = useNavigate();

  const handleConnectWallet = () => {
    // Mock wallet connection with animation
    setTimeout(() => {
      setWalletConnected(!walletConnected);
    }, 1000);
  };

  const handleToggleFavorite = (propertyId: string) => {
    setFavorites(prev => 
      prev.includes(propertyId)
        ? prev.filter(id => id !== propertyId)
        : [...prev, propertyId]
    );
  };

  const handlePropertyClick = (propertyId: string) => {
    navigate(`/property/${propertyId}`);
  };

  return (
    <>
      <Navbar 
        onConnectWallet={handleConnectWallet}
        walletConnected={walletConnected}
      />
      
      <Routes>
        <Route 
          path="/" 
          element={
            <HomePage 
              onToggleFavorite={handleToggleFavorite}
              onPropertyClick={handlePropertyClick}
            />
          } 
        />
        <Route 
          path="/listings" 
          element={
            <ListingsPage 
              onToggleFavorite={handleToggleFavorite}
              onPropertyClick={handlePropertyClick}
            />
          } 
        />
        <Route 
          path="/property/:id" 
          element={<PropertyDetailPage onToggleFavorite={handleToggleFavorite} />} 
        />
        <Route 
          path="/favorites" 
          element={
            <FavoritesPage 
              favorites={favorites}
              onToggleFavorite={handleToggleFavorite}
              onPropertyClick={handlePropertyClick}
            />
          } 
        />
        <Route 
          path="/dashboard" 
          element={
            <DashboardPage 
              walletConnected={walletConnected}
              onConnectWallet={handleConnectWallet}
            />
          } 
        />
      </Routes>
    </>
  );
};

function App() {
  return (
    <Router>
      <AppContent />
    </Router>
  );
}

export default App;
</file>

<file path="src/index.css">
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  font-family: 'Inter', sans-serif;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in {
  animation: fadeIn 0.8s ease-out forwards;
}

.animate-fade-in.delay-300 {
  animation-delay: 0.3s;
  opacity: 0;
}

.animate-fade-in.delay-500 {
  animation-delay: 0.5s;
  opacity: 0;
}

/* Additional animations */
@keyframes float {
  0%, 100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-10px);
  }
}

@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-shimmer {
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
  background-size: 200% 100%;
  animation: shimmer 2s infinite;
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 6px;
  height: 6px;
}

::-webkit-scrollbar-track {
  background: #f1f5f9;
}

::-webkit-scrollbar-thumb {
  background: #cbd5e1;
  border-radius: 3px;
}

::-webkit-scrollbar-thumb:hover {
  background: #94a3b8;
}

/* Line clamp utility */
.line-clamp-2 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

/* Custom gradient backgrounds */
.bg-gradient-radial {
  background: radial-gradient(circle at center, var(--tw-gradient-stops));
}

/* Glass morphism effect */
.glass {
  background: rgba(255, 255, 255, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.glass-dark {
  background: rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}
</file>

<file path="src/main.tsx">
import { StrictMode } from 'react';
import { createRoot } from 'react-dom/client';
import App from './App.tsx';
import './index.css';

createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <App />
  </StrictMode>
);
</file>

<file path="index.html">
<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <link rel="icon" type="image/svg+xml" href="/vite.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Real Estate Platform with Wallet Integration</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.tsx"></script>
  </body>
</html>
</file>

<file path="package.json">
{
  "name": "vite-react-typescript-starter",
  "private": true,
  "version": "0.0.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "lint": "eslint .",
    "preview": "vite preview"
  },
  "dependencies": {
    "lucide-react": "^0.344.0",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-router-dom": "^7.8.2",
    "request": "^2.88.2",
    "some-promise": "^1.3.9"
  },
  "devDependencies": {
    "@eslint/js": "^9.9.1",
    "@types/react": "^18.3.5",
    "@types/react-dom": "^18.3.0",
    "@vitejs/plugin-react": "^4.3.1",
    "autoprefixer": "^10.4.18",
    "eslint": "^9.9.1",
    "eslint-plugin-react-hooks": "^5.1.0-rc.0",
    "eslint-plugin-react-refresh": "^0.4.11",
    "globals": "^15.9.0",
    "postcss": "^8.4.35",
    "tailwindcss": "^3.4.1",
    "typescript": "^5.5.3",
    "typescript-eslint": "^8.3.0",
    "vite": "^5.4.2"
  }
}
</file>

<file path="postcss.config.js">
export default {
  plugins: {
    tailwindcss: {},
    autoprefixer: {},
  },
};
</file>

<file path="tailwind.config.js">
/** @type {import('tailwindcss').Config} */
export default {
  content: ['./index.html', './src/**/*.{js,ts,jsx,tsx}'],
  theme: {
    extend: {
      fontFamily: {
        sans: ['Inter', 'system-ui', 'sans-serif'],
      },
      colors: {
        primary: {
          50: '#eff6ff',
          100: '#dbeafe',
          200: '#bfdbfe',
          300: '#93c5fd',
          400: '#60a5fa',
          500: '#3b82f6',
          600: '#1E40AF',
          700: '#1d4ed8',
          800: '#1e40af',
          900: '#1e3a8a',
        },
        secondary: {
          50: '#f0fdfa',
          100: '#ccfbf1',
          200: '#99f6e4',
          300: '#5eead4',
          400: '#2dd4bf',
          500: '#14b8a6',
          600: '#059669',
          700: '#047857',
          800: '#065f46',
          900: '#064e3b',
        },
        accent: {
          50: '#fffbeb',
          100: '#fef3c7',
          200: '#fde68a',
          300: '#fcd34d',
          400: '#fbbf24',
          500: '#f59e0b',
          600: '#d97706',
          700: '#b45309',
          800: '#92400e',
          900: '#78350f',
        },
      },
      animation: {
        'fade-in': 'fadeIn 0.8s ease-out forwards',
        'pulse': 'pulse 3s cubic-bezier(0.4, 0, 0.6, 1) infinite',
      },
      backdropBlur: {
        xs: '2px',
      },
      spacing: {
        '18': '4.5rem',
        '88': '22rem',
      }
    },
  },
  plugins: [],
};
</file>


</files>
